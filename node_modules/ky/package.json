{
	"name": "ky",
	"version": "0.31.0",
	"description": "Tiny and elegant HTTP client based on the browser Fetch API",
	"license": "MIT",
	"repository": "sindresorhus/ky",
	"funding": "https://github.com/sindresorhus/ky?sponsor=1",
	"author": {
		"name": "Sindre Sorhus",
		"email": "sindresorhus@gmail.com",
		"url": "https://sindresorhus.com"
	},
	"type": "module",
	"main": "./distribution/index.js",
	"exports": "./distribution/index.js",
	"types": "./distribution/index.d.ts",
	"engines": {
		"node": ">=14.16"
	},
	"scripts": {
		"test": "xo && npm run build && ava",
		"debug": "PWDEBUG=1 ava --timeout=2m",
		"release": "np",
		"build": "del-cli distribution && tsc --project tsconfig.dist.json",
		"prepare": "npm run build"
	},
	"files": [
		"distribution"
	],
	"keywords": [
		"fetch",
		"request",
		"requests",
		"http",
		"https",
		"fetching",
		"get",
		"url",
		"curl",
		"wget",
		"net",
		"network",
		"ajax",
		"api",
		"rest",
		"xhr",
		"browser",
		"got",
		"axios",
		"node-fetch"
	],
	"devDependencies": {
		"@sindresorhus/tsconfig": "^3.0.1",
		"@type-challenges/utils": "^0.1.1",
		"@types/body-parser": "^1.19.2",
		"@types/busboy": "^0.3.1",
		"@types/express": "^4.17.13",
		"@types/node-fetch": "^2.6.2",
		"@types/pify": "^5.0.1",
		"abort-controller": "^3.0.0",
		"ava": "4.3.0",
		"body-parser": "^1.20.0",
		"busboy": "^0.3.1",
		"del-cli": "^4.0.1",
		"delay": "^5.0.0",
		"express": "^4.18.1",
		"form-data": "^4.0.0",
		"node-fetch": "^2.6.1",
		"pify": "^6.0.0",
		"playwright-chromium": "^1.22.2",
		"raw-body": "^2.5.1",
		"ts-node": "^10.8.1",
		"typescript": "~4.7.4",
		"xo": "^0.50.0",
		"expect-type": "^0.13.0"
	},
	"sideEffects": false,
	"xo": {
		"envs": [
			"browser"
		],
		"globals": [
			"globalThis"
		],
		"rules": {
			"unicorn/filename-case": "off",
			"@typescript-eslint/ban-ts-comment": "off",
			"@typescript-eslint/no-unsafe-argument": "off",
			"@typescript-eslint/no-unsafe-assignment": "off",
			"@typescript-eslint/no-unsafe-return": "off",
			"@typescript-eslint/no-unsafe-call": "off",
			"@typescript-eslint/naming-convention": "off"
		}
	},
	"ava": {
		"require": [
			"./test/_require.ts"
		],
		"extensions": {
			"ts": "module"
		},
		"nodeArguments": [
			"--loader=ts-node/esm"
		]
	},
	"nyc": {
		"reporter": [
			"text",
			"html",
			"lcov"
		],
		"extension": [
			".ts"
		],
		"exclude": [
			"**/test/**"
		]
	}
}
